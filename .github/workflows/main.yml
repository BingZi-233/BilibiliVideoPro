name: build
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'build')
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk 8.0
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 8.0
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/

  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'releases')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk 8.0
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 8.0
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: get version
        id: get_version
        run: |
          VERSION=$(date +"%Y.%m.%d-%H%M%S")
          echo "::set-output name=VERSION::$VERSION"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: Release v${{ steps.get_version.outputs.VERSION }}
          body: |
            BilibiliVideoPro 自动发布版本
            - 构建时间: ${{ steps.get_version.outputs.VERSION }}
            - 提交信息: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
      - name: find jar file
        id: find_jar
        run: |
          JAR_FILE=$(find build/libs -name "*.jar" | head -1)
          echo "::set-output name=JAR_FILE::$JAR_FILE"
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_jar.outputs.JAR_FILE }}
          asset_name: BilibiliVideoPro-${{ steps.get_version.outputs.VERSION }}.jar
          asset_content_type: application/java-archive